<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Catalog.API</name>
    </assembly>
    <members>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.Controllers.CatalogController.ItemsAsync(System.Int32,System.Int32,System.String)">
            <summary>
            查询all by page
            </summary>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.Controllers.CatalogController.ItemByIdAsync(System.Int32)">
            <summary>
            查询某个
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.Controllers.CatalogController.ItemsWithNameAsync(System.String,System.Int32,System.Int32)">
            <summary>
            名字模糊查询
            </summary>
            <param name="name"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.Controllers.CatalogController.ItemsByTypeIdAndBrandIdAsync(System.Int32,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            根据类型+商家查询
            </summary>
            <param name="catalogTypeId"></param>
            <param name="catalogBrandId"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.Controllers.CatalogController.ItemsByBrandIdAsync(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            根据商家查询
            </summary>
            <param name="catalogBrandId"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.Controllers.CatalogController.CatalogTypesAsync">
            <summary>
            所有商品类别
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.Controllers.CatalogController.CatalogBrandsAsync">
            <summary>
            所有商家
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.Controllers.CatalogController.UpdateProductAsync(Microsoft.eShopOnContainers.Services.Catalog.API.Model.CatalogItem)">
            <summary>
            更新商品
            发布事件
            </summary>
            <param name="productToUpdate"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.Controllers.CatalogController.CreateProductAsync(Microsoft.eShopOnContainers.Services.Catalog.API.Model.CatalogItem)">
            <summary>
            添加商品
            </summary>
            <param name="product"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.Controllers.CatalogController.DeleteProductAsync(System.Int32)">
            <summary>
            删除商品
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.Controllers.CatalogController.ChangeUriPlaceholder(System.Collections.Generic.List{Microsoft.eShopOnContainers.Services.Catalog.API.Model.CatalogItem})">
            <summary>
            修改图片地址
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.Controllers.PicController.GetImageAsync(System.Int32)">
            <summary>
            根据商品id，下载图片
            </summary>
            <param name="catalogItemId"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.eShopOnContainers.Services.Catalog.API.Model.CatalogItem.OnReorder">
            <summary>
            True if item is on reorder
            </summary>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.Model.CatalogItem.RemoveStock(System.Int32)">
            <summary>
            Decrements the quantity of a particular item in inventory and ensures the restockThreshold hasn't
            been breached. If so, a RestockRequest is generated in CheckThreshold. 
            
            If there is sufficient stock of an item, then the integer returned at the end of this call should be the same as quantityDesired. 
            In the event that there is not sufficient stock available, the method will remove whatever stock is available and return that quantity to the client.
            In this case, it is the responsibility of the client to determine if the amount that is returned is the same as quantityDesired.
            It is invalid to pass in a negative number. 
            </summary>
            <param name="quantityDesired"></param>
            <returns>int: Returns the number actually removed from stock. </returns>
            
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.Model.CatalogItem.AddStock(System.Int32)">
            <summary>
            Increments the quantity of a particular item in inventory.
            <param name="quantity"></param>
            <returns>int: Returns the quantity that has been added to stock</returns>
            </summary>
        </member>
        <member name="T:Microsoft.eShopOnContainers.Services.Catalog.API.IntegrationEvents.Events.OrderStatusChangedToAwaitingValidationIntegrationEvent">
            <summary>
            订单状态更改,
            等待验证集成事件
            </summary>
        </member>
        <member name="T:Microsoft.eShopOnContainers.Services.Catalog.API.IntegrationEvents.Events.OrderStatusChangedToPaidIntegrationEvent">
            <summary>
            订单状态更改,
            付费集成事件
            </summary>
        </member>
        <member name="T:Microsoft.eShopOnContainers.Services.Catalog.API.IntegrationEvents.Events.OrderStockConfirmedIntegrationEvent">
            <summary>
            订单库存确认集成事件
            </summary>
        </member>
        <member name="T:Microsoft.eShopOnContainers.Services.Catalog.API.IntegrationEvents.Events.OrderStockRejectedIntegrationEvent">
            <summary>
            订单库存拒绝集成事件
            </summary>
        </member>
        <member name="T:Microsoft.eShopOnContainers.Services.Catalog.API.IntegrationEvents.Events.ProductPriceChangedIntegrationEvent">
            <summary>
            产品价格变更整合事件
            </summary>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.Program.CreateHostBuilder(Microsoft.Extensions.Configuration.IConfiguration,System.String[])">
            <summary>
            配置Host：
            Kestrel端口 + Web根目录 + 日志 
            </summary>
            <param name="configuration"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.Program.CreateSerilogLogger(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            封装方法：
            配置Seril日志
            </summary>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.Program.GetDefinedPorts(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            配置端口
            </summary>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.Program.GetConfiguration">
            <summary>
            封装配置：
            配置文件 + Azure KeyValut
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.Startup.ConfigureEventBus(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            配置事件总线，
            等待验证 + 等待支付
            </summary>
            <param name="app"></param>
        </member>
        <member name="T:Microsoft.eShopOnContainers.Services.Catalog.API.CustomExtensionMethods">
            <summary>
            自定义扩展方法:
            </summary>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.CustomExtensionMethods.AddAppInsight(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            扩展方法:
            app监控
            </summary>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.CustomExtensionMethods.AddCustomMVC(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            扩展方法：
            自定义MVC服务，
            跨域
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.CustomExtensionMethods.AddCustomHealthCheck(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            扩展服务：
            自定义健康检查，
            sqlserver + AzureBlob + AzureServiceBus + RabbitMQ
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.CustomExtensionMethods.AddCustomDbContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            扩展方法：
            自定义Db上下文，
            商品目录 + 事件日志
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.CustomExtensionMethods.AddCustomOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            扩展方法：
            自定义选项配置
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.CustomExtensionMethods.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            扩展服务：
            定义Swagger文档
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.CustomExtensionMethods.AddIntegrationServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            扩展服务：
            添加集成服务，
            Azure + RabbitMQ
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.eShopOnContainers.Services.Catalog.API.CustomExtensionMethods.AddEventBus(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            扩展服务：
            定义事件总线，
            订单状态更改：
            等待验证集成事件 + 等待支付集成事件
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Catalog.API.Extensions.WebHostExtensions.MigrateDbContext``1(Microsoft.AspNetCore.Hosting.IWebHost,System.Action{``0,System.IServiceProvider})">
            <summary>
            webhost 宿主机
            迁移数据库及数据
            </summary>
            <typeparam name="TContext"></typeparam>
            <param name="host"></param>
            <param name="seeder"></param>
            <returns></returns>
        </member>
        <member name="T:Catalog.API.Infrastructure.Exceptions.CatalogDomainException">
            <summary>
            Exception type for app exceptions
            </summary>
        </member>
        <member name="T:CatalogApi.CatalogReflection">
            <summary>Holder for reflection information generated from Proto/catalog.proto</summary>
        </member>
        <member name="P:CatalogApi.CatalogReflection.Descriptor">
            <summary>File descriptor for Proto/catalog.proto</summary>
        </member>
        <member name="F:CatalogApi.CatalogItemRequest.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="F:CatalogApi.CatalogItemsRequest.IdsFieldNumber">
            <summary>Field number for the "ids" field.</summary>
        </member>
        <member name="F:CatalogApi.CatalogItemsRequest.PageSizeFieldNumber">
            <summary>Field number for the "pageSize" field.</summary>
        </member>
        <member name="F:CatalogApi.CatalogItemsRequest.PageIndexFieldNumber">
            <summary>Field number for the "pageIndex" field.</summary>
        </member>
        <member name="F:CatalogApi.CatalogItemResponse.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="F:CatalogApi.CatalogItemResponse.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:CatalogApi.CatalogItemResponse.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="F:CatalogApi.CatalogItemResponse.PriceFieldNumber">
            <summary>Field number for the "price" field.</summary>
        </member>
        <member name="F:CatalogApi.CatalogItemResponse.PictureFileNameFieldNumber">
            <summary>Field number for the "picture_file_name" field.</summary>
        </member>
        <member name="F:CatalogApi.CatalogItemResponse.PictureUriFieldNumber">
            <summary>Field number for the "picture_uri" field.</summary>
        </member>
        <member name="F:CatalogApi.CatalogItemResponse.CatalogTypeFieldNumber">
            <summary>Field number for the "catalog_type" field.</summary>
        </member>
        <member name="F:CatalogApi.CatalogItemResponse.CatalogBrandFieldNumber">
            <summary>Field number for the "catalog_brand" field.</summary>
        </member>
        <member name="F:CatalogApi.CatalogItemResponse.AvailableStockFieldNumber">
            <summary>Field number for the "available_stock" field.</summary>
        </member>
        <member name="F:CatalogApi.CatalogItemResponse.RestockThresholdFieldNumber">
            <summary>Field number for the "restock_threshold" field.</summary>
        </member>
        <member name="F:CatalogApi.CatalogItemResponse.MaxStockThresholdFieldNumber">
            <summary>Field number for the "max_stock_threshold" field.</summary>
        </member>
        <member name="F:CatalogApi.CatalogItemResponse.OnReorderFieldNumber">
            <summary>Field number for the "on_reorder" field.</summary>
        </member>
        <member name="F:CatalogApi.CatalogBrand.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="F:CatalogApi.CatalogBrand.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:CatalogApi.CatalogType.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="F:CatalogApi.CatalogType.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="F:CatalogApi.PaginatedItemsResponse.PageIndexFieldNumber">
            <summary>Field number for the "pageIndex" field.</summary>
        </member>
        <member name="F:CatalogApi.PaginatedItemsResponse.PageSizeFieldNumber">
            <summary>Field number for the "pageSize" field.</summary>
        </member>
        <member name="F:CatalogApi.PaginatedItemsResponse.CountFieldNumber">
            <summary>Field number for the "count" field.</summary>
        </member>
        <member name="F:CatalogApi.PaginatedItemsResponse.DataFieldNumber">
            <summary>Field number for the "data" field.</summary>
        </member>
        <member name="P:CatalogApi.Catalog.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:CatalogApi.Catalog.CatalogBase">
            <summary>Base class for server-side implementations of Catalog</summary>
        </member>
        <member name="M:CatalogApi.Catalog.CatalogBase.GetItemById(CatalogApi.CatalogItemRequest,Grpc.Core.ServerCallContext)">
             <summary>
             >>
            option (google.api.http) = {
            get: "/api/v1/catalog/items/{id}"
            };
            &lt;&lt; 
             </summary>
             <param name="request">The request received from the client.</param>
             <param name="context">The context of the server-side call handler being invoked.</param>
             <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:CatalogApi.Catalog.BindService(CatalogApi.Catalog.CatalogBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:CatalogApi.Catalog.BindService(Grpc.Core.ServiceBinderBase,CatalogApi.Catalog.CatalogBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
    </members>
</doc>
